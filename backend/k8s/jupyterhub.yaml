apiVersion: apps/v1
kind: Deployment
metadata:
  name: jupyterhub
  namespace: ml-platform
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jupyterhub
  template:
    metadata:
      labels:
        app: jupyterhub
    spec:
      serviceAccountName: jupyterhub
      containers:
      - name: jupyterhub
        image: jupyterhub/jupyterhub:4.0
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql://postgres:$(POSTGRES_PASSWORD)@postgres:5432/mlplatform"
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        volumeMounts:
        - name: jupyterhub-config
          mountPath: /srv/jupyterhub/jupyterhub_config.py
          subPath: jupyterhub_config.py
        - name: docker-socket
          mountPath: /var/run/docker.sock
      volumes:
      - name: jupyterhub-config
        configMap:
          name: jupyterhub-config
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
---
apiVersion: v1
kind: Service
metadata:
  name: jupyterhub
  namespace: ml-platform
spec:
  selector:
    app: jupyterhub
  ports:
  - port: 8000
    targetPort: 8000
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jupyterhub
  namespace: ml-platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: jupyterhub-spawner
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "create", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["get", "list", "create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: jupyterhub-spawner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: jupyterhub-spawner
subjects:
- kind: ServiceAccount
  name: jupyterhub
  namespace: ml-platform